# src/main/resources/application.yml
server:
  port: 8000

logging:
  level:
    com.gateway.filter: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.data.redis: DEBUG

management:
  server:
    base-path: /actuator
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

jwt:
  secret: ${JWT_SECRET_KEY}

spring:
  redis:
    host: redis-ratelimiter
    port: 6380
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

  data:
    redis:
      host: redis-ratelimiter
      port: 6380
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  application:
    name: moca-gateway

  cloud:
    gateway:
      routes:
        - id: auth-route
          uri: http://auth-service:8082
          predicates:
            - Path=/auth/**
          metadata:
            description: "Authentication Service"

        - id: backend-route
          uri: http://backend-service:8083
          predicates:
            - Path=/api/**
          metadata:
            description: "Backend Service"

        - id: rag-route
          uri: http://rag-service:8090
          predicates:
            - Path=/rag/**
          filters:
            - name: RequestRateLimiter
              args:
                rate-limiter: "#{@ragServerRateLimiter}"
                key-resolver: "#{@userKeyResolver}"
          metadata:
            description: "RAG Service with Rate Limiting"

      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: false
            maxAge: 3600

      httpclient:
        connect-timeout: 3000
        response-timeout: 5s

      redis-rate-limiter:
        replenish-rate: 1
        burst-capacity: 10
        requested-tokens: 1
