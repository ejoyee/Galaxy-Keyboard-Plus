// 기존 플러그인 유지
apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"

// 최신 방식: plugins 블록 사용
plugins {
    // Google services Gradle 플러그인 추가
    id 'com.google.gms.google-services'
    // Firebase App Distribution 플러그인 추가
    id 'com.google.firebase.appdistribution'
}

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* 기존 내용 유지 */
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 */
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.frontend"
    defaultConfig {
        applicationId "com.frontend"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            // 릴리스 서명 설정 추가
            storeFile file('keystore/release.keystore')
            storePassword System.getenv("KEYSTORE_PASSWORD") ?: MYAPP_RELEASE_STORE_PASSWORD
            keyAlias System.getenv("KEY_ALIAS") ?: MYAPP_RELEASE_KEY_ALIAS
            keyPassword System.getenv("KEY_PASSWORD") ?: MYAPP_RELEASE_KEY_PASSWORD
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            
            // Firebase App Distribution 설정
            firebaseAppDistribution {
                appId = System.getenv("FIREBASE_APP_ID")
                groups = "testers"
                releaseNotes = "Jenkins 자동 배포 버전"
            }
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
    
    // Firebase BoM 추가
    implementation platform('com.google.firebase:firebase-bom:33.13.0')
    
    // Firebase 종속성 추가 (버전 지정할 필요 없음)
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-app-distribution'
}