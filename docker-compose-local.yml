version: "3.8"

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports: ["80:80", "443:443"]
    # 로컬 테스트에선 레포 안의 conf 사용
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on: [gateway]
    restart: always
    networks:
      - web

  gateway:
    container_name: gateway-service
    build: ./back/gateway
    command: ["java","-jar","/app/app.jar","--spring.profiles.active=local"]
    env_file: .env.dev
    ports: ["8000:8000"]
    depends_on:
      - redis-ratelimiter
    restart: always
    networks:
      - web
      - internal

  auth:
    container_name: auth-service
    build: ./back/auth
    command: ["java","-jar","/app/app.jar","--spring.profiles.active=local"]
    env_file: .env.dev
    depends_on: [postgres_auth]
    environment:
      DB_HOST:     postgres_auth
      DB_PORT:     5432
      DB_NAME:     ${POSTGRES_AUTH_DB_NAME}
      DB_USER:     ${POSTGRES_AUTH_USER}
      DB_PASSWORD: ${POSTGRES_AUTH_PASSWORD}
    ports: ["8082:8082"]
    restart: always
    networks:
      - internal

  backend:
    container_name: backend-service
    build: ./back/backend
    command: ["java","-jar","/app/app.jar","--spring.profiles.active=local"]
    env_file: .env.dev
    depends_on: [postgres_sched]
    environment:
      DB_HOST:     postgres_sched
      DB_PORT:     5432
      DB_NAME:     ${POSTGRES_SCHED_DB_NAME}
      DB_USER:     ${POSTGRES_SCHED_USER}
      DB_PASSWORD: ${POSTGRES_SCHED_PASSWORD}
    ports: ["8083:8083"]
    restart: always
    networks:
      - internal

  rag:
    container_name: rag-service
    build: ./back/rag
    command: ["uvicorn","app.main:app","--host","0.0.0.0","--port","8090"]
    env_file: .env.dev
    environment: { ENV: local }
    ports: ["8090:8090"]
    restart: always
    networks:
      - internal
  
  # Redis 서비스 (Rate Limiter 전용)
  redis-ratelimiter:
    container_name: moca-redis-ratelimiter
    image: redis:7-alpine
    ports: ["6380:6380"]
    restart: always
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_ratelimiter_data:/data
    networks:
      - internal

  postgres_auth:
    container_name: postgres-auth
    image: postgres:15
    env_file: .env.dev
    environment:
      POSTGRES_USER:     ${POSTGRES_AUTH_USER}
      POSTGRES_PASSWORD: ${POSTGRES_AUTH_PASSWORD}
      POSTGRES_DB:       ${POSTGRES_AUTH_DB_NAME}
    ports: ["5432:5432"]
    restart: always
    volumes:
      - pg_auth:/var/lib/postgresql/data
    networks:
      - internal

  postgres_sched:
    container_name: postgres-sched
    image: postgres:15
    env_file: .env.dev
    environment:
      POSTGRES_USER:     ${POSTGRES_SCHED_USER}
      POSTGRES_PASSWORD: ${POSTGRES_SCHED_PASSWORD}
      POSTGRES_DB:       ${POSTGRES_SCHED_DB_NAME}
    ports: ["5433:5432"]
    restart: always
    volumes:
      - pg_sched:/var/lib/postgresql/data
    networks:
      - internal

volumes:
  pg_auth:
  pg_sched:
  redis_ratelimiter_data:

networks:
  web:
    driver: bridge
  internal:
    driver: bridge
